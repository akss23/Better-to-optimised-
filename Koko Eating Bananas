class Solution {
public:
    int minEatingSpeed(vector<int>& piles, int h) {
        sort(piles.begin(),piles.end());

        int mx=*max_element(piles.begin(),piles.end());
        int start=1;
        int end=mx;
        int ans=0;

        while(start<=end){
            int mid=start+(end-start)/2;
            long long cnt=0a;
            for(int i=0;i<piles.size();i++){
                cnt+= ceil(double(piles[i])/mid);
            }
            if(cnt<=h) {
                ans=mid;
                end=mid-1;
            }
            else {
             
                start=mid+1;
            }
        }
        return ans;
    }
};
