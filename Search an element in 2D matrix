class Solution {
  private :
bool lb(vector<int> &v ,int n, int x){
    int start = 0;
    int end = n-1;
    
    while(start<=end){
        int mid=start + (end -start)/2;
        if(v[mid] == x) return true;
        else if(v[mid] > x) {
            end=mid-1;
        }
        else start=mid+1;
}
return false;
}
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        
        int m = matrix.size();
        int n = matrix[0].size();
        if(matrix.empty() || matrix[0].empty()) return false;
        for(int i=0;i<m;i++){
           for(int j=0;j<n;j++){
               if(target>=matrix[i][0] && target<=matrix[i][n-1]) {
                return lb(matrix[i],n,target);
               }
               else continue;
               
           }
        }
        return false;
    }
};
